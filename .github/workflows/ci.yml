name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    name: C++ build and tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Print runner info
        run: |
          echo "Runner OS: $RUNNER_OS"
          uname -a || true

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3-dev ninja-build pkg-config cmake git

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake ninja pkg-config

      - name: Install system dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y ninja cmake

      - name: Tool versions (debug)
        run: |
          cmake --version || true
          ninja --version || true
          gcc --version || clang --version || true
          python -V
          pip -V

      - name: Install Python build tooling
        run: |
          python -m pip install --upgrade pip setuptools wheel build scikit-build-core pybind11 numpy

      - name: Configure (with logs on failure)
        run: |
          cmake -S . -B build -DBUILD_TESTS=ON -DBUILD_BENCHMARKS=OFF || (cat build/CMakeFiles/CMakeOutput.log || true; cat build/CMakeFiles/CMakeError.log || true; exit 1)

      - name: Build (verbose)
        run: |
          cmake --build build --config Release -- -j VERBOSE=1 || true

      - name: Run tests
        run: |
          ctest --test-dir build --output-on-failure -C Release

  python-smoke:
    name: Python import smoke (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Print runner info
        run: |
          echo "Runner OS: $RUNNER_OS"
          uname -a || true

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3-dev ninja-build pkg-config cmake git

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake ninja pkg-config

      - name: Install system dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y ninja cmake

      - name: Tool versions (debug)
        run: |
          cmake --version || true
          ninja --version || true
          gcc --version || clang --version || true
          python -V
          pip -V

      - name: Install Python build tooling
        run: |
          python -m pip install --upgrade pip setuptools wheel build scikit-build-core pybind11 numpy
      - name: Build wheel locally
        run: |
          python -m build
      - name: Install wheel
        run: |
          pip install dist/*.whl
      - name: Smoke test
        shell: bash
        run: |
          python - <<'PY'
          import LinAlgKit as lk
          m = lk.Matrix(2,2,1.0)
          print('OK', m.to_numpy().shape)
          PY
